{"ast":null,"code":"import axios from 'axios';\n\n// The base URL of our backend server\nconst API_URL = 'http://localhost:5000/api/products/';\n\n/**\r\n * Fetches all products from the backend\r\n */\nconst getProducts = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    // The actual data is in response.data.data\n    return response.data.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    // You can also throw the error to be handled by the component\n    throw error;\n  }\n};\n\n// You can add other functions like getProductById, createProduct, etc. here later\n\nconst productService = {\n  getProducts\n};\nexport default productService;","map":{"version":3,"names":["axios","API_URL","getProducts","response","get","data","error","console","productService"],"sources":["D:/AlphaWizz/sports-ecommerce/client/src/services/productService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// The base URL of our backend server\r\nconst API_URL = 'http://localhost:5000/api/products/';\r\n\r\n/**\r\n * Fetches all products from the backend\r\n */\r\nconst getProducts = async () => {\r\n    try {\r\n        const response = await axios.get(API_URL);\r\n        // The actual data is in response.data.data\r\n        return response.data.data;\r\n    } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n        // You can also throw the error to be handled by the component\r\n        throw error;\r\n    }\r\n};\r\n\r\n// You can add other functions like getProductById, createProduct, etc. here later\r\n\r\nconst productService = {\r\n    getProducts,\r\n};\r\n\r\nexport default productService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,qCAAqC;;AAErD;AACA;AACA;AACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC;IACA,OAAOE,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD;IACA,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;;AAEA,MAAME,cAAc,GAAG;EACnBN;AACJ,CAAC;AAED,eAAeM,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}