{"ast":null,"code":"var _jsxFileName = \"D:\\\\AlphaWizz\\\\sports-ecommerce\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // 1. ADD a loading state, initially true\n\n  useEffect(() => {\n    try {\n      const token = localStorage.getItem('userToken');\n      if (token) {\n        const decoded = jwtDecode(token);\n        if (decoded.exp * 1000 < Date.now()) {\n          authService.logout();\n          setUser(null);\n        } else {\n          setUser({\n            token,\n            ...decoded\n          });\n        }\n      }\n    } catch (error) {\n      // If any error occurs (e.g., invalid token), ensure user is logged out\n      authService.logout();\n      setUser(null);\n    } finally {\n      // 2. ALWAYS set loading to false after the check is complete\n      setLoading(false);\n    }\n  }, []);\n  const login = async userData => {\n    const data = await authService.login(userData);\n    const decoded = jwtDecode(data.token);\n    setUser({\n      token: data.token,\n      ...decoded\n    });\n    return data;\n  };\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin',\n    loading,\n    // 3. EXPORT the loading state\n    login,\n    logout\n  };\n\n  // 4. PREVENT rendering children until the initial auth check is done\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jwtDecode","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","decoded","exp","Date","now","logout","error","login","userData","data","value","isAuthenticated","isAdmin","role","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/AlphaWizz/sports-ecommerce/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport authService from '../services/authService';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true); // 1. ADD a loading state, initially true\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const token = localStorage.getItem('userToken');\r\n      if (token) {\r\n        const decoded = jwtDecode(token);\r\n        if (decoded.exp * 1000 < Date.now()) {\r\n          authService.logout();\r\n          setUser(null);\r\n        } else {\r\n          setUser({ token, ...decoded });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // If any error occurs (e.g., invalid token), ensure user is logged out\r\n      authService.logout();\r\n      setUser(null);\r\n    } finally {\r\n      // 2. ALWAYS set loading to false after the check is complete\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (userData) => {\r\n    const data = await authService.login(userData);\r\n    const decoded = jwtDecode(data.token);\r\n    setUser({ token: data.token, ...decoded });\r\n    return data;\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n    loading, // 3. EXPORT the loading state\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  // 4. PREVENT rendering children until the initial auth check is done\r\n  return (\r\n      <AuthContext.Provider value={value}>\r\n        {!loading && children}\r\n      </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,gBAAGR,aAAa,CAAC,IAAI,CAAC;AAGvC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAK,EAAE;QACT,MAAMG,OAAO,GAAGf,SAAS,CAACY,KAAK,CAAC;QAChC,IAAIG,OAAO,CAACC,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;UACnCjB,WAAW,CAACkB,MAAM,CAAC,CAAC;UACpBV,OAAO,CAAC,IAAI,CAAC;QACf,CAAC,MAAM;UACLA,OAAO,CAAC;YAAEG,KAAK;YAAE,GAAGG;UAAQ,CAAC,CAAC;QAChC;MACF;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd;MACAnB,WAAW,CAACkB,MAAM,CAAC,CAAC;MACpBV,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,SAAS;MACR;MACAE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAChC,MAAMC,IAAI,GAAG,MAAMtB,WAAW,CAACoB,KAAK,CAACC,QAAQ,CAAC;IAC9C,MAAMP,OAAO,GAAGf,SAAS,CAACuB,IAAI,CAACX,KAAK,CAAC;IACrCH,OAAO,CAAC;MAAEG,KAAK,EAAEW,IAAI,CAACX,KAAK;MAAE,GAAGG;IAAQ,CAAC,CAAC;IAC1C,OAAOQ,IAAI;EACb,CAAC;EAED,MAAMJ,MAAM,GAAGA,CAAA,KAAM;IACnBlB,WAAW,CAACkB,MAAM,CAAC,CAAC;IACpBV,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMe,KAAK,GAAG;IACZhB,IAAI;IACJiB,eAAe,EAAE,CAAC,CAACjB,IAAI;IACvBkB,OAAO,EAAE,CAAAlB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB,IAAI,MAAK,OAAO;IAC/BjB,OAAO;IAAE;IACTW,KAAK;IACLF;EACF,CAAC;;EAED;EACA,oBACIhB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACJ,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE7B,CAAC;AAACzB,EAAA,CArDWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAuDzB,OAAO,MAAM6B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOpC,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;AAAC+B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}