{"ast":null,"code":"// client/src/services/authService.js\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth/';\n\n/**\r\n * Registers a new user\r\n * @param {object} userData - { name, email, password }\r\n * @returns {object} response data\r\n */\nconst register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}register`, userData);\n\n    // Optionally save token on registration (currently disabled)\n    // if (response.data.token) {\n    //   localStorage.setItem('userToken', JSON.stringify(response.data.token));\n    // }\n\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      message: 'Registration failed'\n    };\n  }\n};\n\n/**\r\n * Logs in a user\r\n * @param {object} userData - { email, password }\r\n * @returns {object} response data\r\n */\nconst login = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}login`, userData);\n\n    // Store token on successful login\n    if (response.data.token) {\n      localStorage.setItem('userToken', JSON.stringify(response.data.token));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Login failed'\n    };\n  }\n};\n\n/**\r\n * Logs out the user by removing token from localStorage\r\n */\nconst logout = () => {\n  localStorage.removeItem('userToken');\n};\n\n// Export all auth functions\nconst authService = {\n  register,\n  login,\n  logout\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","data","error","_error$response","message","login","token","localStorage","setItem","JSON","stringify","_error$response2","logout","removeItem","authService"],"sources":["D:/AlphaWizz/sports-ecommerce/client/src/services/authService.js"],"sourcesContent":["// client/src/services/authService.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/auth/';\r\n\r\n/**\r\n * Registers a new user\r\n * @param {object} userData - { name, email, password }\r\n * @returns {object} response data\r\n */\r\nconst register = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}register`, userData);\r\n\r\n        // Optionally save token on registration (currently disabled)\r\n        // if (response.data.token) {\r\n        //   localStorage.setItem('userToken', JSON.stringify(response.data.token));\r\n        // }\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || { message: 'Registration failed' };\r\n    }\r\n};\r\n\r\n/**\r\n * Logs in a user\r\n * @param {object} userData - { email, password }\r\n * @returns {object} response data\r\n */\r\nconst login = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}login`, userData);\r\n\r\n        // Store token on successful login\r\n        if (response.data.token) {\r\n            localStorage.setItem('userToken', JSON.stringify(response.data.token));\r\n        }\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || { message: 'Login failed' };\r\n    }\r\n};\r\n\r\n/**\r\n * Logs out the user by removing token from localStorage\r\n */\r\nconst logout = () => {\r\n    localStorage.removeItem('userToken');\r\n};\r\n\r\n// Export all auth functions\r\nconst authService = {\r\n    register,\r\n    login,\r\n    logout,\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;;AAEjD;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACjC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,UAAU,EAAEE,QAAQ,CAAC;;IAEjE;IACA;IACA;IACA;;IAEA,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZ,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI;MAAEG,OAAO,EAAE;IAAsB,CAAC;EACpE;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAG,MAAOP,QAAQ,IAAK;EAC9B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,OAAO,EAAEE,QAAQ,CAAC;;IAE9D;IACA,IAAIC,QAAQ,CAACE,IAAI,CAACK,KAAK,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ,CAACE,IAAI,CAACK,KAAK,CAAC,CAAC;IAC1E;IAEA,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,gBAAA;IACZ,MAAM,EAAAA,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAI;MAAEG,OAAO,EAAE;IAAe,CAAC;EAC7D;AACJ,CAAC;;AAED;AACA;AACA;AACA,MAAMQ,MAAM,GAAGA,CAAA,KAAM;EACjBL,YAAY,CAACM,UAAU,CAAC,WAAW,CAAC;AACxC,CAAC;;AAED;AACA,MAAMC,WAAW,GAAG;EAChBjB,QAAQ;EACRQ,KAAK;EACLO;AACJ,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}