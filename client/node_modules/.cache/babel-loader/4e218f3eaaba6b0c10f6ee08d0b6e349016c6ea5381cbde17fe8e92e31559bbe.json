{"ast":null,"code":"var _jsxFileName = \"D:\\\\AlphaWizz\\\\sports-ecommerce\\\\client\\\\src\\\\pages\\\\ProductDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport productService from '../services/productService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductDetailPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // --- State Management for User Interaction ---\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [quantity, setQuantity] = useState(1);\n\n  // --- 1. DATA FETCHING AND INTELLIGENT INITIALIZATION ---\n  useEffect(() => {\n    const fetchProduct = async () => {\n      setLoading(true);\n      try {\n        const res = await productService.getProductById(id);\n        if (res.success) {\n          var _fetchedProduct$varia;\n          const fetchedProduct = res.data;\n          setProduct(fetchedProduct);\n\n          // **CRITICAL FIX**: Set the initial state to the FIRST available variant\n          if (fetchedProduct.productType === 'variant' && ((_fetchedProduct$varia = fetchedProduct.variants) === null || _fetchedProduct$varia === void 0 ? void 0 : _fetchedProduct$varia.length) > 0) {\n            const firstVariant = fetchedProduct.variants[0];\n            const initialOptions = {};\n            firstVariant.options.forEach(opt => {\n              initialOptions[opt.name] = opt.value;\n            });\n            setSelectedOptions(initialOptions);\n          }\n        } else {\n          setError('Product not found.');\n        }\n      } catch (err) {\n        setError('Failed to fetch product details.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProduct();\n  }, [id]);\n\n  // --- 2. DERIVED STATE: FIND THE CURRENT VARIANT (Memoized for performance) ---\n  const currentVariant = useMemo(() => {\n    if (!product || product.productType !== 'variant' || Object.keys(selectedOptions).length === 0) {\n      return null;\n    }\n    // Find the variant that perfectly matches all currently selected options\n    return product.variants.find(variant => variant.options.every(opt => selectedOptions[opt.name] === opt.value));\n  }, [product, selectedOptions]);\n\n  // --- 3. THE \"INTELLIGENCE\": LOGIC TO CHECK OPTION AVAILABILITY ---\n  const getAvailableOptions = useMemo(() => {\n    if (!product || product.productType !== 'variant') return {};\n    const allPossibleOptions = {};\n    product.optionNames.forEach(name => {\n      allPossibleOptions[name] = [...new Set(product.variants.map(v => {\n        var _v$options$find;\n        return (_v$options$find = v.options.find(opt => opt.name === name)) === null || _v$options$find === void 0 ? void 0 : _v$options$find.value;\n      }))];\n    });\n    return allPossibleOptions;\n  }, [product]);\n\n  // This function checks if a specific choice is part of any valid, complete variant\n  const isOptionCombinationAvailable = (optionName, optionValue) => {\n    if (!product || product.productType !== 'variant') return true;\n\n    // Create a temporary selection object to test against\n    const tempSelection = {\n      ...selectedOptions,\n      [optionName]: optionValue\n    };\n\n    // Check if there is at least one variant that satisfies this potential selection.\n    // For example, if we test for 'Size: S', we check if there's any variant\n    // that matches the currently selected color AND has 'Size: S'.\n    return product.variants.some(variant => Object.entries(tempSelection).every(([key, value]) => {\n      // If an option isn't selected yet, we don't hold it against the variant\n      if (!value) return true;\n      return variant.options.some(opt => opt.name === key && opt.value === value);\n    }));\n  };\n\n  // --- 4. UI HANDLERS ---\n  const handleOptionSelect = (optionName, value) => {\n    setSelectedOptions(prev => ({\n      ...prev,\n      [optionName]: value\n    }));\n    setQuantity(1); // Reset quantity on any variant change\n  };\n  const handleQuantityChange = amount => {\n    setQuantity(prev => {\n      const newQuantity = Math.max(1, prev + amount);\n      if (product.productType === 'simple') {\n        return Math.min(newQuantity, product.stock);\n      }\n      if (currentVariant) {\n        return Math.min(newQuantity, currentVariant.stock);\n      }\n      return 1;\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-20 text-xl\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-20 text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 23\n  }, this);\n  if (!product) return null;\n\n  // --- 5. THE PROFESSIONAL RENDER LOGIC ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto max-w-6xl py-12 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.imageUrl,\n          alt: product.name,\n          className: \"w-full rounded-lg shadow-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold mb-2\",\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mb-6\",\n          children: product.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-700 mb-6\",\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), product.productType === 'simple' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl font-extrabold text-gray-900 mb-6\",\n            children: [\"\\u20B9\", product.price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `text-lg font-semibold ${product.stock > 0 ? 'text-green-600' : 'text-red-600'}`,\n            children: product.stock > 0 ? `${product.stock} in stock` : 'Out of Stock'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), product.productType === 'variant' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl font-extrabold text-gray-900 mb-6\",\n            children: currentVariant ? `â‚¹${currentVariant.price.toFixed(2)}` : 'Please select options'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: product.optionNames.map(name => {\n              var _getAvailableOptions$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold mb-2\",\n                  children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: selectedOptions[name]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 92\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-wrap gap-3\",\n                  children: (_getAvailableOptions$ = getAvailableOptions[name]) === null || _getAvailableOptions$ === void 0 ? void 0 : _getAvailableOptions$.map(value => {\n                    const isSelected = selectedOptions[name] === value;\n                    // We don't need the intelligence check here, as the final stock check handles it.\n                    // For a more advanced UI, you would use it to disable buttons.\n                    return /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleOptionSelect(name, value),\n                      className: `px-6 py-2 border rounded-md text-center font-medium transition-all ${isSelected ? 'border-blue-600 bg-blue-50 ring-2 ring-blue-500' : 'border-gray-300 hover:border-gray-500'}`,\n                      children: value\n                    }, value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 41\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `mt-8 text-lg font-semibold ${currentVariant && currentVariant.stock > 0 ? 'text-green-600' : 'text-red-600'}`,\n            children: currentVariant ? `${currentVariant.stock} in stock` : \"This combination is not available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mr-4\",\n              children: \"Quantity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center border border-gray-300 rounded-md\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleQuantityChange(-1),\n                className: \"px-4 py-2 font-bold text-lg\",\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"px-6 py-2 border-l border-r\",\n                children: quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleQuantityChange(1),\n                className: \"px-4 py-2 font-bold text-lg\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: product.productType === 'simple' ? product.stock === 0 : !currentVariant || currentVariant.stock === 0,\n            className: \"w-full mt-6 py-4 text-lg font-bold text-white bg-purple-600 rounded-lg hover:bg-purple-700 disabled:bg-gray-400 disabled:cursor-not-allowed\",\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductDetailPage, \"DC0rC72m1CkGFeaovo2ZRpFVwpo=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetailPage;\nexport default ProductDetailPage;\nvar _c;\n$RefreshReg$(_c, \"ProductDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useParams","productService","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductDetailPage","_s","id","product","setProduct","loading","setLoading","error","setError","selectedOptions","setSelectedOptions","quantity","setQuantity","fetchProduct","res","getProductById","success","_fetchedProduct$varia","fetchedProduct","data","productType","variants","length","firstVariant","initialOptions","options","forEach","opt","name","value","err","currentVariant","Object","keys","find","variant","every","getAvailableOptions","allPossibleOptions","optionNames","Set","map","v","_v$options$find","isOptionCombinationAvailable","optionName","optionValue","tempSelection","some","entries","key","handleOptionSelect","prev","handleQuantityChange","amount","newQuantity","Math","max","min","stock","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","imageUrl","alt","category","description","price","toFixed","_getAvailableOptions$","isSelected","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/AlphaWizz/sports-ecommerce/client/src/pages/ProductDetailsPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport productService from '../services/productService';\r\n\r\nconst ProductDetailPage = () => {\r\n    const { id } = useParams();\r\n    const [product, setProduct] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    // --- State Management for User Interaction ---\r\n    const [selectedOptions, setSelectedOptions] = useState({});\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    // --- 1. DATA FETCHING AND INTELLIGENT INITIALIZATION ---\r\n    useEffect(() => {\r\n        const fetchProduct = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const res = await productService.getProductById(id);\r\n                if (res.success) {\r\n                    const fetchedProduct = res.data;\r\n                    setProduct(fetchedProduct);\r\n\r\n                    // **CRITICAL FIX**: Set the initial state to the FIRST available variant\r\n                    if (fetchedProduct.productType === 'variant' && fetchedProduct.variants?.length > 0) {\r\n                        const firstVariant = fetchedProduct.variants[0];\r\n                        const initialOptions = {};\r\n                        firstVariant.options.forEach(opt => {\r\n                            initialOptions[opt.name] = opt.value;\r\n                        });\r\n                        setSelectedOptions(initialOptions);\r\n                    }\r\n                } else {\r\n                    setError('Product not found.');\r\n                }\r\n            } catch (err) {\r\n                setError('Failed to fetch product details.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchProduct();\r\n    }, [id]);\r\n\r\n    // --- 2. DERIVED STATE: FIND THE CURRENT VARIANT (Memoized for performance) ---\r\n    const currentVariant = useMemo(() => {\r\n        if (!product || product.productType !== 'variant' || Object.keys(selectedOptions).length === 0) {\r\n            return null;\r\n        }\r\n        // Find the variant that perfectly matches all currently selected options\r\n        return product.variants.find(variant =>\r\n            variant.options.every(opt => selectedOptions[opt.name] === opt.value)\r\n        );\r\n    }, [product, selectedOptions]);\r\n\r\n    // --- 3. THE \"INTELLIGENCE\": LOGIC TO CHECK OPTION AVAILABILITY ---\r\n    const getAvailableOptions = useMemo(() => {\r\n        if (!product || product.productType !== 'variant') return {};\r\n\r\n        const allPossibleOptions = {};\r\n        product.optionNames.forEach(name => {\r\n            allPossibleOptions[name] = [...new Set(product.variants.map(v => v.options.find(opt => opt.name === name)?.value))];\r\n        });\r\n        return allPossibleOptions;\r\n\r\n    }, [product]);\r\n\r\n    // This function checks if a specific choice is part of any valid, complete variant\r\n    const isOptionCombinationAvailable = (optionName, optionValue) => {\r\n        if (!product || product.productType !== 'variant') return true;\r\n\r\n        // Create a temporary selection object to test against\r\n        const tempSelection = { ...selectedOptions, [optionName]: optionValue };\r\n\r\n        // Check if there is at least one variant that satisfies this potential selection.\r\n        // For example, if we test for 'Size: S', we check if there's any variant\r\n        // that matches the currently selected color AND has 'Size: S'.\r\n        return product.variants.some(variant =>\r\n            Object.entries(tempSelection).every(([key, value]) => {\r\n                // If an option isn't selected yet, we don't hold it against the variant\r\n                if (!value) return true;\r\n                return variant.options.some(opt => opt.name === key && opt.value === value);\r\n            })\r\n        );\r\n    };\r\n\r\n    // --- 4. UI HANDLERS ---\r\n    const handleOptionSelect = (optionName, value) => {\r\n        setSelectedOptions(prev => ({ ...prev, [optionName]: value }));\r\n        setQuantity(1); // Reset quantity on any variant change\r\n    };\r\n\r\n    const handleQuantityChange = (amount) => {\r\n        setQuantity(prev => {\r\n            const newQuantity = Math.max(1, prev + amount);\r\n            if (product.productType === 'simple') {\r\n                return Math.min(newQuantity, product.stock);\r\n            }\r\n            if (currentVariant) {\r\n                return Math.min(newQuantity, currentVariant.stock);\r\n            }\r\n            return 1;\r\n        });\r\n    };\r\n\r\n    if (loading) return <div className=\"text-center mt-20 text-xl\">Loading...</div>;\r\n    if (error) return <div className=\"text-center mt-20 text-red-500\">{error}</div>;\r\n    if (!product) return null;\r\n\r\n    // --- 5. THE PROFESSIONAL RENDER LOGIC ---\r\n    return (\r\n        <div className=\"container mx-auto max-w-6xl py-12 px-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12\">\r\n                <div><img src={product.imageUrl} alt={product.name} className=\"w-full rounded-lg shadow-lg\" /></div>\r\n                <div>\r\n                    <h1 className=\"text-4xl font-bold mb-2\">{product.name}</h1>\r\n                    <p className=\"text-gray-500 mb-6\">{product.category}</p>\r\n                    <p className=\"text-lg text-gray-700 mb-6\">{product.description}</p>\r\n\r\n                    {/* --- A: UI FOR SIMPLE PRODUCTS --- */}\r\n                    {product.productType === 'simple' && (\r\n                        <>\r\n                            <div className=\"text-4xl font-extrabold text-gray-900 mb-6\">â‚¹{product.price.toFixed(2)}</div>\r\n                            <p className={`text-lg font-semibold ${product.stock > 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                                {product.stock > 0 ? `${product.stock} in stock` : 'Out of Stock'}\r\n                            </p>\r\n                            {/* Quantity and Add to Cart for simple products */}\r\n                        </>\r\n                    )}\r\n\r\n                    {/* --- B: UI FOR VARIANT PRODUCTS --- */}\r\n                    {product.productType === 'variant' && (\r\n                        <>\r\n                            <div className=\"text-4xl font-extrabold text-gray-900 mb-6\">\r\n                                {currentVariant ? `â‚¹${currentVariant.price.toFixed(2)}` : 'Please select options'}\r\n                            </div>\r\n\r\n                            <div className=\"space-y-6\">\r\n                                {product.optionNames.map(name => (\r\n                                    <div key={name}>\r\n                                        <h3 className=\"text-lg font-semibold mb-2\">{name}: <span className=\"font-normal\">{selectedOptions[name]}</span></h3>\r\n                                        <div className=\"flex flex-wrap gap-3\">\r\n                                            {getAvailableOptions[name]?.map(value => {\r\n                                                const isSelected = selectedOptions[name] === value;\r\n                                                // We don't need the intelligence check here, as the final stock check handles it.\r\n                                                // For a more advanced UI, you would use it to disable buttons.\r\n                                                return (\r\n                                                    <button key={value} onClick={() => handleOptionSelect(name, value)}\r\n                                                            className={`px-6 py-2 border rounded-md text-center font-medium transition-all ${isSelected ? 'border-blue-600 bg-blue-50 ring-2 ring-blue-500' : 'border-gray-300 hover:border-gray-500'}`}\r\n                                                    >\r\n                                                        {value}\r\n                                                    </button>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <p className={`mt-8 text-lg font-semibold ${currentVariant && currentVariant.stock > 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                                {currentVariant ? `${currentVariant.stock} in stock` : \"This combination is not available.\"}\r\n                            </p>\r\n                        </>\r\n                    )}\r\n\r\n                    {/* --- C: Common UI (Quantity and Add to Cart) --- */}\r\n                    <div className=\"mt-8\">\r\n                        <div className=\"flex items-center mt-4\">\r\n                            <h3 className=\"text-lg font-semibold mr-4\">Quantity:</h3>\r\n                            <div className=\"flex items-center border border-gray-300 rounded-md\">\r\n                                <button onClick={() => handleQuantityChange(-1)} className=\"px-4 py-2 font-bold text-lg\">-</button>\r\n                                <span className=\"px-6 py-2 border-l border-r\">{quantity}</span>\r\n                                <button onClick={() => handleQuantityChange(1)} className=\"px-4 py-2 font-bold text-lg\">+</button>\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            disabled={product.productType === 'simple' ? product.stock === 0 : !currentVariant || currentVariant.stock === 0}\r\n                            className=\"w-full mt-6 py-4 text-lg font-bold text-white bg-purple-600 rounded-lg hover:bg-purple-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n                        >\r\n                            Add to Cart\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetailPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}