{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/products/';\nconst CATEGORY_API_URL = 'http://localhost:5000/api/categories/';\n// ... other routes\napp.use('/api/categories', categoryRoutes);\n\n// Helper function to get the auth token, remains the same.\nconst getAuthHeaders = () => {\n  const token = JSON.parse(localStorage.getItem('userToken'));\n  if (token) {\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n  }\n  return {};\n};\n\n// --- CORRECTED FUNCTIONS ---\n// Each function now processes the response and returns response.data\n\n// --- MODIFIED: getProducts now accepts filters ---\nconst getProducts = async (filters = {}) => {\n  // Safely build query parameters\n  const params = new URLSearchParams();\n  if (filters.category) params.append('category', filters.category);\n  if (filters.subcategory) params.append('subcategory', filters.subcategory);\n  const response = await axios.get(API_URL, {\n    params\n  });\n  return response.data;\n};\nconst getProductById = async id => {\n  const response = await axios.get(API_URL + id);\n  return response.data; // Return { success, data }\n};\nconst createProduct = async productData => {\n  const response = await axios.post(API_URL, productData, getAuthHeaders());\n  return response.data;\n};\nconst updateProduct = async (id, productData) => {\n  const response = await axios.put(API_URL + id, productData, getAuthHeaders());\n  return response.data;\n};\nconst deleteProduct = async id => {\n  const response = await axios.delete(API_URL + id, getAuthHeaders());\n  return response.data;\n};\nconst productService = {\n  getProducts,\n  getProductById,\n  createProduct,\n  updateProduct,\n  deleteProduct\n};\nexport default productService;","map":{"version":3,"names":["axios","API_URL","CATEGORY_API_URL","app","use","categoryRoutes","getAuthHeaders","token","JSON","parse","localStorage","getItem","headers","Authorization","getProducts","filters","params","URLSearchParams","category","append","subcategory","response","get","data","getProductById","id","createProduct","productData","post","updateProduct","put","deleteProduct","delete","productService"],"sources":["D:/AlphaWizz/sports-ecommerce/client/src/services/productService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/products/';\r\nconst CATEGORY_API_URL = 'http://localhost:5000/api/categories/';\r\n// ... other routes\r\napp.use('/api/categories', categoryRoutes);\r\n\r\n\r\n// Helper function to get the auth token, remains the same.\r\nconst getAuthHeaders = () => {\r\n    const token = JSON.parse(localStorage.getItem('userToken'));\r\n    if (token) {\r\n        return { headers: { Authorization: `Bearer ${token}` } };\r\n    }\r\n    return {};\r\n};\r\n\r\n// --- CORRECTED FUNCTIONS ---\r\n// Each function now processes the response and returns response.data\r\n\r\n// --- MODIFIED: getProducts now accepts filters ---\r\nconst getProducts = async (filters = {}) => {\r\n    // Safely build query parameters\r\n    const params = new URLSearchParams();\r\n    if (filters.category) params.append('category', filters.category);\r\n    if (filters.subcategory) params.append('subcategory', filters.subcategory);\r\n\r\n    const response = await axios.get(API_URL, { params });\r\n    return response.data;\r\n};\r\n\r\nconst getProductById = async (id) => {\r\n    const response = await axios.get(API_URL + id);\r\n    return response.data; // Return { success, data }\r\n};\r\n\r\nconst createProduct = async (productData) => {\r\n    const response = await axios.post(API_URL, productData, getAuthHeaders());\r\n    return response.data;\r\n};\r\n\r\nconst updateProduct = async (id, productData) => {\r\n    const response = await axios.put(API_URL + id, productData, getAuthHeaders());\r\n    return response.data;\r\n};\r\n\r\nconst deleteProduct = async (id) => {\r\n    const response = await axios.delete(API_URL + id, getAuthHeaders());\r\n    return response.data;\r\n};\r\n\r\nconst productService = {\r\n    getProducts,\r\n    getProductById,\r\n    createProduct,\r\n    updateProduct,\r\n    deleteProduct,\r\n};\r\n\r\nexport default productService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,qCAAqC;AACrD,MAAMC,gBAAgB,GAAG,uCAAuC;AAChE;AACAC,GAAG,CAACC,GAAG,CAAC,iBAAiB,EAAEC,cAAc,CAAC;;AAG1C;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC3D,IAAIJ,KAAK,EAAE;IACP,OAAO;MAAEK,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAAE,CAAC;EAC5D;EACA,OAAO,CAAC,CAAC;AACb,CAAC;;AAED;AACA;;AAEA;AACA,MAAMO,WAAW,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EACxC;EACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpC,IAAIF,OAAO,CAACG,QAAQ,EAAEF,MAAM,CAACG,MAAM,CAAC,UAAU,EAAEJ,OAAO,CAACG,QAAQ,CAAC;EACjE,IAAIH,OAAO,CAACK,WAAW,EAAEJ,MAAM,CAACG,MAAM,CAAC,aAAa,EAAEJ,OAAO,CAACK,WAAW,CAAC;EAE1E,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAACrB,OAAO,EAAE;IAAEe;EAAO,CAAC,CAAC;EACrD,OAAOK,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;EACjC,MAAMJ,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAACrB,OAAO,GAAGwB,EAAE,CAAC;EAC9C,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,MAAMG,aAAa,GAAG,MAAOC,WAAW,IAAK;EACzC,MAAMN,QAAQ,GAAG,MAAMrB,KAAK,CAAC4B,IAAI,CAAC3B,OAAO,EAAE0B,WAAW,EAAErB,cAAc,CAAC,CAAC,CAAC;EACzE,OAAOe,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMM,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,WAAW,KAAK;EAC7C,MAAMN,QAAQ,GAAG,MAAMrB,KAAK,CAAC8B,GAAG,CAAC7B,OAAO,GAAGwB,EAAE,EAAEE,WAAW,EAAErB,cAAc,CAAC,CAAC,CAAC;EAC7E,OAAOe,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMQ,aAAa,GAAG,MAAON,EAAE,IAAK;EAChC,MAAMJ,QAAQ,GAAG,MAAMrB,KAAK,CAACgC,MAAM,CAAC/B,OAAO,GAAGwB,EAAE,EAAEnB,cAAc,CAAC,CAAC,CAAC;EACnE,OAAOe,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMU,cAAc,GAAG;EACnBnB,WAAW;EACXU,cAAc;EACdE,aAAa;EACbG,aAAa;EACbE;AACJ,CAAC;AAED,eAAeE,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}