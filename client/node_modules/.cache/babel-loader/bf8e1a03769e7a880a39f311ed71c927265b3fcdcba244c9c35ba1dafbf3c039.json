{"ast":null,"code":"var _jsxFileName = \"D:\\\\AlphaWizz\\\\sports-ecommerce\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Correct import for jwt-decode v4+\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Check for token on initial load\n    const token = localStorage.getItem('userToken');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        // Check if token is expired\n        if (decoded.exp * 1000 < Date.now()) {\n          authService.logout();\n          setUser(null);\n        } else {\n          // You might need to fetch the full user object if the token is minimal\n          // For now, the decoded token is enough\n          setUser({\n            token,\n            ...decoded\n          });\n        }\n      } catch (error) {\n        console.error(\"Invalid token:\", error);\n        authService.logout();\n        setUser(null);\n      }\n    }\n  }, []);\n  const login = async userData => {\n    const data = await authService.login(userData);\n    const decoded = jwtDecode(data.token);\n    setUser({\n      token: data.token,\n      ...decoded\n    });\n    return data;\n  };\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n\n  // The value provided to the consumer components\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin',\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jwtDecode","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","decoded","exp","Date","now","logout","error","console","login","userData","data","value","isAuthenticated","isAdmin","role","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/AlphaWizz/sports-ecommerce/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { jwtDecode } from 'jwt-decode'; // Correct import for jwt-decode v4+\r\nimport authService from '../services/authService';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check for token on initial load\r\n    const token = localStorage.getItem('userToken');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        // Check if token is expired\r\n        if (decoded.exp * 1000 < Date.now()) {\r\n          authService.logout();\r\n          setUser(null);\r\n        } else {\r\n          // You might need to fetch the full user object if the token is minimal\r\n          // For now, the decoded token is enough\r\n          setUser({ token, ...decoded });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Invalid token:\", error);\r\n        authService.logout();\r\n        setUser(null);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const login = async (userData) => {\r\n    const data = await authService.login(userData);\r\n    const decoded = jwtDecode(data.token);\r\n    setUser({ token: data.token, ...decoded });\r\n    return data;\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n  };\r\n\r\n  // The value provided to the consumer components\r\n  const value = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AACxC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,gBAAGR,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,OAAO,GAAGb,SAAS,CAACU,KAAK,CAAC;QAChC;QACA,IAAIG,OAAO,CAACC,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;UACnCf,WAAW,CAACgB,MAAM,CAAC,CAAC;UACpBR,OAAO,CAAC,IAAI,CAAC;QACf,CAAC,MAAM;UACL;UACA;UACAA,OAAO,CAAC;YAAEC,KAAK;YAAE,GAAGG;UAAQ,CAAC,CAAC;QAChC;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCjB,WAAW,CAACgB,MAAM,CAAC,CAAC;QACpBR,OAAO,CAAC,IAAI,CAAC;MACf;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAChC,MAAMC,IAAI,GAAG,MAAMrB,WAAW,CAACmB,KAAK,CAACC,QAAQ,CAAC;IAC9C,MAAMR,OAAO,GAAGb,SAAS,CAACsB,IAAI,CAACZ,KAAK,CAAC;IACrCD,OAAO,CAAC;MAAEC,KAAK,EAAEY,IAAI,CAACZ,KAAK;MAAE,GAAGG;IAAQ,CAAC,CAAC;IAC1C,OAAOS,IAAI;EACb,CAAC;EAED,MAAML,MAAM,GAAGA,CAAA,KAAM;IACnBhB,WAAW,CAACgB,MAAM,CAAC,CAAC;IACpBR,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,MAAMc,KAAK,GAAG;IACZf,IAAI;IACJgB,eAAe,EAAE,CAAC,CAAChB,IAAI;IACvBiB,OAAO,EAAE,CAAAjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkB,IAAI,MAAK,OAAO;IAC/BN,KAAK;IACLH;EACF,CAAC;EAED,oBAAOd,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACJ,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAAEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;;AAED;AAAAxB,EAAA,CAlDaF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAmDzB,OAAO,MAAM4B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOnC,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;AAAC8B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}