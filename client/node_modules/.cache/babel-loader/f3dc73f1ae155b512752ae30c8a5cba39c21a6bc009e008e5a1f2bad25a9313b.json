{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/products/';\nconst CATEGORY_API_URL = 'http://localhost:5000/api/categories/';\n\n// --- REMOVED ---\n// The lines below were causing the circular dependency.\n// They are server-side code and do not belong in a client-side React file.\n// import app from \"../App\";\n// app.use('/api/categories', categoryRoutes);\n\n// Helper function to get the auth token, remains the same.\nconst getAuthHeaders = () => {\n  // A small correction: localStorage.getItem returns a string, so JSON.parse is only needed if you stored a full object.\n  // If you only stored the token string, you don't need JSON.parse. Assuming you stored it as a string.\n  const userToken = localStorage.getItem('userToken');\n  // Let's also handle the case where the token might have quotes if it was stringified.\n  const token = userToken ? JSON.parse(userToken) : null;\n  if (token) {\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n  }\n  return {};\n};\n\n// --- MODIFIED: getProducts now accepts filters ---\nconst getProducts = async (filters = {}) => {\n  // Safely build query parameters\n  const params = new URLSearchParams();\n  if (filters.category) params.append('category', filters.category);\n  if (filters.subcategory) params.append('subcategory', filters.subcategory);\n  const response = await axios.get(API_URL, {\n    params\n  });\n  return response.data;\n};\n\n// --- NEW: Function to fetch categories ---\nconst getCategories = async () => {\n  const response = await axios.get(CATEGORY_API_URL);\n  return response.data;\n};\nconst getProductById = async id => {\n  const response = await axios.get(API_URL + id);\n  return response.data;\n};\nconst createProduct = async productData => {\n  const response = await axios.post(API_URL, productData, getAuthHeaders());\n  return response.data;\n};\nconst updateProduct = async (id, productData) => {\n  const response = await axios.put(API_URL + id, productData, getAuthHeaders());\n  return response.data;\n};\nconst deleteProduct = async id => {\n  const response = await axios.delete(API_URL + id, getAuthHeaders());\n  return response.data;\n};\nconst productService = {\n  getProducts,\n  getCategories,\n  getProductById,\n  createProduct,\n  updateProduct,\n  deleteProduct\n};\nexport default productService;","map":{"version":3,"names":["axios","API_URL","CATEGORY_API_URL","getAuthHeaders","userToken","localStorage","getItem","token","JSON","parse","headers","Authorization","getProducts","filters","params","URLSearchParams","category","append","subcategory","response","get","data","getCategories","getProductById","id","createProduct","productData","post","updateProduct","put","deleteProduct","delete","productService"],"sources":["D:/AlphaWizz/sports-ecommerce/client/src/services/productService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/products/';\r\nconst CATEGORY_API_URL = 'http://localhost:5000/api/categories/';\r\n\r\n// --- REMOVED ---\r\n// The lines below were causing the circular dependency.\r\n// They are server-side code and do not belong in a client-side React file.\r\n// import app from \"../App\";\r\n// app.use('/api/categories', categoryRoutes);\r\n\r\n// Helper function to get the auth token, remains the same.\r\nconst getAuthHeaders = () => {\r\n    // A small correction: localStorage.getItem returns a string, so JSON.parse is only needed if you stored a full object.\r\n    // If you only stored the token string, you don't need JSON.parse. Assuming you stored it as a string.\r\n    const userToken = localStorage.getItem('userToken');\r\n    // Let's also handle the case where the token might have quotes if it was stringified.\r\n    const token = userToken ? JSON.parse(userToken) : null;\r\n\r\n    if (token) {\r\n        return {headers: {Authorization: `Bearer ${token}`}};\r\n    }\r\n    return {};\r\n};\r\n\r\n// --- MODIFIED: getProducts now accepts filters ---\r\nconst getProducts = async (filters = {}) => {\r\n    // Safely build query parameters\r\n    const params = new URLSearchParams();\r\n    if (filters.category) params.append('category', filters.category);\r\n    if (filters.subcategory) params.append('subcategory', filters.subcategory);\r\n\r\n    const response = await axios.get(API_URL, {params});\r\n    return response.data;\r\n};\r\n\r\n// --- NEW: Function to fetch categories ---\r\nconst getCategories = async () => {\r\n    const response = await axios.get(CATEGORY_API_URL);\r\n    return response.data;\r\n};\r\n\r\nconst getProductById = async (id) => {\r\n    const response = await axios.get(API_URL + id);\r\n    return response.data;\r\n};\r\n\r\nconst createProduct = async (productData) => {\r\n    const response = await axios.post(API_URL, productData, getAuthHeaders());\r\n    return response.data;\r\n};\r\n\r\nconst updateProduct = async (id, productData) => {\r\n    const response = await axios.put(API_URL + id, productData, getAuthHeaders());\r\n    return response.data;\r\n};\r\n\r\nconst deleteProduct = async (id) => {\r\n    const response = await axios.delete(API_URL + id, getAuthHeaders());\r\n    return response.data;\r\n};\r\n\r\nconst productService = {\r\n    getProducts,\r\n    getCategories,\r\n    getProductById,\r\n    createProduct,\r\n    updateProduct,\r\n    deleteProduct,\r\n};\r\n\r\nexport default productService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,qCAAqC;AACrD,MAAMC,gBAAgB,GAAG,uCAAuC;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB;EACA;EACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACnD;EACA,MAAMC,KAAK,GAAGH,SAAS,GAAGI,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC,GAAG,IAAI;EAEtD,IAAIG,KAAK,EAAE;IACP,OAAO;MAACG,OAAO,EAAE;QAACC,aAAa,EAAE,UAAUJ,KAAK;MAAE;IAAC,CAAC;EACxD;EACA,OAAO,CAAC,CAAC;AACb,CAAC;;AAED;AACA,MAAMK,WAAW,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EACxC;EACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpC,IAAIF,OAAO,CAACG,QAAQ,EAAEF,MAAM,CAACG,MAAM,CAAC,UAAU,EAAEJ,OAAO,CAACG,QAAQ,CAAC;EACjE,IAAIH,OAAO,CAACK,WAAW,EAAEJ,MAAM,CAACG,MAAM,CAAC,aAAa,EAAEJ,OAAO,CAACK,WAAW,CAAC;EAE1E,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAACnB,OAAO,EAAE;IAACa;EAAM,CAAC,CAAC;EACnD,OAAOK,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMH,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAClB,gBAAgB,CAAC;EAClD,OAAOiB,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAME,cAAc,GAAG,MAAOC,EAAE,IAAK;EACjC,MAAML,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAACnB,OAAO,GAAGuB,EAAE,CAAC;EAC9C,OAAOL,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMI,aAAa,GAAG,MAAOC,WAAW,IAAK;EACzC,MAAMP,QAAQ,GAAG,MAAMnB,KAAK,CAAC2B,IAAI,CAAC1B,OAAO,EAAEyB,WAAW,EAAEvB,cAAc,CAAC,CAAC,CAAC;EACzE,OAAOgB,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMO,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,WAAW,KAAK;EAC7C,MAAMP,QAAQ,GAAG,MAAMnB,KAAK,CAAC6B,GAAG,CAAC5B,OAAO,GAAGuB,EAAE,EAAEE,WAAW,EAAEvB,cAAc,CAAC,CAAC,CAAC;EAC7E,OAAOgB,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMS,aAAa,GAAG,MAAON,EAAE,IAAK;EAChC,MAAML,QAAQ,GAAG,MAAMnB,KAAK,CAAC+B,MAAM,CAAC9B,OAAO,GAAGuB,EAAE,EAAErB,cAAc,CAAC,CAAC,CAAC;EACnE,OAAOgB,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMW,cAAc,GAAG;EACnBpB,WAAW;EACXU,aAAa;EACbC,cAAc;EACdE,aAAa;EACbG,aAAa;EACbE;AACJ,CAAC;AAED,eAAeE,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}